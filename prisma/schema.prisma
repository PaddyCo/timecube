// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PuzzleType {
  slug  String   @id @unique
  name  String
  times Time[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Time {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  performedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  milliseconds Int
  penalty Int @default(0)
  dnf Boolean @default(false)
  user User @relation(fields: [userId], references: [id])
  userId String
  puzzleType PuzzleType @relation(fields: [puzzleTypeSlug], references: [slug])
  puzzleTypeSlug String
  bests UserBest[]
}

model User {
  id      String   @id @default(uuid())
  createdAt DateTime @default(now())
  email   String   @unique
  name    String
  times   Time[]
  authMethods AuthMethod[]
  bests UserBest[]
}

enum AuthType {
  LOCAL
}

model AuthMethod {
  id  String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  type AuthType 
  data Json
}

enum BestCategory {
  SINGLE
  AO5
  AO12
  AO100
  MO3
}

model UserBest {
  user User @relation(fields: [userId], references: [id])
  userId String
  category BestCategory
  time Time @relation(fields: [timeId], references: [id])
  timeId String
  milliseconds Int
  
  @@unique([userId, timeId, category])
}